buildscript {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.21'

        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:perf-plugin:1.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.5'
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.5.3'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.41.0'
}

allprojects {
    repositories {
        google()
        //mavenLocal() must be listed at the top to facilitate testing
        mavenLocal()
        mavenCentral()
    }

    def isNonStable = { candidate ->
        return ['alpha', 'beta', 'rc', 'snapshot', '-m'].any { word ->
            return candidate.version.toLowerCase().contains(word)
        }
    }

    def isBlocked = { candidate ->
        def blocklist = [
                'androidx.browser:browser',
                'com.facebook.android',
                'com.google.guava',
                'com.github.bumptech.glide'
        ]
        return blocklist.any { word ->
            return candidate.toString().contains(word)
        }
    }

    dependencyUpdates {
        rejectVersionIf {
            isNonStable(it.candidate) || isBlocked(it.candidate)
        }
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint ("com.pinterest:ktlint:0.49.0") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
}

task("ktlint", type: JavaExec, group: "verification") {
    def outputDir = "${project.buildDir}/reports/ktlint/"
    def inputFiles = project.fileTree(dir: "src", include: "**/*.kt")
    def outputFile = "${outputDir}ktlint-checkstyle-report.xml"

    // See:
    // https://medium.com/@vanniktech/making-your-gradle-tasks-incremental-7f26e4ef09c3
    inputs.files(inputFiles)
    outputs.dir(outputDir)

    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args = [
        "--format",
        "--code-style=android_studio",
        "--reporter=plain",
        "--reporter=checkstyle,output=${outputFile}",
        "**/*.kt",
    ]
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
